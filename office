public void MethodJuggedArray()
        {
            // jagged array
            int[][] juggedArray = new int[3][];

            juggedArray[0] = new int[5];
            juggedArray[1] = new int[7];
            juggedArray[2] = new int[1];

            juggedArray[0] = new int[] { 1, 2, 3, 4 };
            juggedArray[0] = new int[] { 0, 3, 8, 5 };
            juggedArray[0] = new int[] { 7, 34, 2, 7 };


            // alternative way 
            int[][] juggedArray2 = new int[][]
            {
                    new int[] { 1, 2},
                    new int[] { 3, 4, 5, 6 }
            };

            // we can omit new int[][]
            int[][] juggedArray3 =
            {
                    new int[] { 1, 2, 3},
                    new int[] { 3, 4, 5, 6 }
                };

            //Console.WriteLine($"middle in first row : {juggedArray3[0][1]}");

            foreach (var item in juggedArray3)
            {
                foreach (var item2 in item)
                {
                    Console.WriteLine(item2);
                }
            }

        }

        public void JuggedArrayChellenge()
        {
            string[][] familyMembers = new string[3][]
            {
                new string[] { "gio", "mari" },
                new string[] { "ilia", "tilda" },
                new string[] { "gaga", "gugu" }
            };

            for (int i = 0; i < familyMembers.Length; i++)
            {
                Console.WriteLine("this is my family");
                for (int j = 0; j < familyMembers[i].Length; j++)
                {
                    Console.WriteLine($"hello my name is {familyMembers[i][j]}");
                }
            }

        }

        public void ArraysAsParameters()
        {
            //int[] grades = { 1, 2, 3, 4, 5 };
            //double average = GetAverage(grades);

            //Console.WriteLine(average);

            int[] happiness = new int[] { 1, 2, 3, 4, 5 };

            SunIsShinning(happiness);

            foreach (var item in happiness)
            {
                Console.Write($"{item} ");
            }
        }

        public void SunIsShinning(int[] arr)
        {
            for (int i = 0; i < arr.Length; i++)
            {
                arr[i] += 2;
            }
        }

        public double GetAverage(int[] gradesArray)
        {
            int sum = 0;

            foreach (var grade in gradesArray)
            {
                sum += grade;
            }

            double average = (double)sum / gradesArray.Length;
            return average;
            
            //return (double)gradesArray.Sum() / gradesArray.Length;

            //return gradesArray.Average();
        }


        public int minv2(params int[] numbers)
        {
            int min = int.MaxValue;
            foreach (var item in numbers)
            {
                min = Math.Min(min, item);
            }
            return min;
        }

        public void ArraylistMethod()
        {
            ArrayList list = new ArrayList();
            ArrayList list1 = new ArrayList(100);

            list.Add(2);
            list.Add("hi");
            list.Add(23.4);
            list.Add(5L);
            list.Add(2);

            // removes with value 2 only first occurance
            list.Remove(2);

            // remove at index
            //list.RemoveAt(0);

            // list size
            int count = list.Capacity;

            double sum = 0;

            foreach (var v in list)
            {
                if (v is int || v is double)
                {
                    sum += Convert.ToDouble(v);
                }
                else if (v is string)
                {
                    Console.WriteLine(v);
                }
            }
        }
